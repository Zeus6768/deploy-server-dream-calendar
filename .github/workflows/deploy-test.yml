# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Deploy test to AWS EC2

on:
  push:
    branches:
      - test

env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: dream-calendar-build
  CODE_DEPLOY_APPLICATION_NAME: dream-calendar
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: dream-calendar-deploy-test

permissions:
  contents: read

jobs:

  deploy:
    name: Deploy test
    runs-on: ubuntu-latest
    environment: test

    steps:
      - name: Checkout
        uses: actions/checkout@v3.3.0

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: clean build -x test

      - name: Copy JAR file
        run: cp ./build/libs/*.jar ./deploy/

      - name: Select appspec
        run: cp ./deploy/appspec-test.yml ./deploy/appspec.yml

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Upload to AWS S3
        run: |
          aws deploy push \
            --application-name $CODE_DEPLOY_APPLICATION_NAME \
            --ignore-hidden-files \
            --s3-location s3://$S3_BUCKET_NAME/$CODE_DEPLOY_APPLICATION_NAME.zip \
            --source ./deploy

      - name: Deploy to AWS EC2 from S3
        run: |
          aws deploy create-deployment \
            --application-name $CODE_DEPLOY_APPLICATION_NAME \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --deployment-group-name $CODE_DEPLOY_DEPLOYMENT_GROUP_NAME \
            --s3-location bucket=$S3_BUCKET_NAME,key=$CODE_DEPLOY_APPLICATION_NAME.zip,bundleType=zip